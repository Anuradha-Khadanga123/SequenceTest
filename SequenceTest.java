package test.com.ldap;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class SequenceTest {

	public static void main(String[] args) {
		/**The list to store the size of each array generated by below logic */ 
		ArrayList<Integer> size = new ArrayList<Integer>();	
		/** The Map stores the starting numbers as key and the size of each array as value */
		HashMap<Integer, Integer> store = new HashMap<Integer, Integer>();
	/** The main logic to generate the sequence, starts from 1 Million and ends before 1 */	
	for(int n=100000; n>1; n--) {
		
		ArrayList<Integer> sequence = new ArrayList<Integer>();
		
		int i = n;
		
		while (i > 1) {

			if (i % 2 == 0) {
				sequence.add(i / 2);
				i = i / 2;
			} else {
				sequence.add(3 * i + 1);
				i = 3 * i + 1;
			}
		}
		
		int total = sequence.size();
	/** Adding the size of each sequence in the arraylist defined above */	
		size.add(total);
	/** Storing the key and value in the map defined above */	
		store.put(n, total);
		
	}
	
	/** Finding the largest number from the list which contains the size of every sequence generated */
	int maxSize = Collections.max(size);
	System.out.println("Size of the largest chain =" + maxSize);
	
	/** Finding the Starting number based on the largest chain size from the Map */
	for(Map.Entry<Integer, Integer> entry : store.entrySet()) {
		if(entry.getValue().equals(maxSize)) {
			System.out.println("The starting number is = " + entry.getKey());
		}
	}
	
	}

}
